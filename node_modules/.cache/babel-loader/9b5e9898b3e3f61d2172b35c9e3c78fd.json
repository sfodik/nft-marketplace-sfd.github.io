{"ast":null,"code":"import { GET_MARKET_SUCCESS, GET_MARKET_PENDING, GET_MARKET_ERROR } from '../actions/ActionTypes';\nconst initialState = {\n  market: null,\n  loading: false,\n  error: null\n};\nexport default function MarketReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_MARKET_SUCCESS:\n      return { ...state,\n        market: action.payload.assets,\n        loading: false\n      };\n\n    case GET_MARKET_PENDING:\n      return { ...state,\n        loading: true\n      };\n\n    case GET_MARKET_ERROR:\n      return { ...state,\n        error: action.payload,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}\n_c = MarketReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MarketReducer\");","map":{"version":3,"sources":["/var/www/nft-marketplace/src/store/reducer/MarketReducer.ts"],"names":["GET_MARKET_SUCCESS","GET_MARKET_PENDING","GET_MARKET_ERROR","initialState","market","loading","error","MarketReducer","state","action","type","payload","assets"],"mappings":"AAAA,SAASA,kBAAT,EAA6BC,kBAA7B,EAAiDC,gBAAjD,QAAyE,wBAAzE;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,IADW;AAEnBC,EAAAA,OAAO,EAAE,KAFU;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;AAMA,eAAe,SAASC,aAAT,GAA0D;AAAA,MAAnCC,KAAmC,uEAA3BL,YAA2B;AAAA,MAAbM,MAAa;;AACvE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,kBAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELJ,QAAAA,MAAM,EAAEK,MAAM,CAACE,OAAP,CAAeC,MAFlB;AAGLP,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKJ,kBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELH,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKH,gBAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELF,QAAAA,KAAK,EAAEG,MAAM,CAACE,OAFT;AAGLN,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF;AACE,aAAOG,KAAP;AAnBJ;AAqBD;KAtBuBD,a","sourcesContent":["import { GET_MARKET_SUCCESS, GET_MARKET_PENDING, GET_MARKET_ERROR } from '../actions/ActionTypes'\n\nconst initialState = {\n  market: null,\n  loading: false,\n  error: null\n};\n\nexport default function MarketReducer(state = initialState, action: any) {\n  switch (action.type) {\n    case GET_MARKET_SUCCESS:\n      return {\n        ...state,\n        market: action.payload.assets,\n        loading: false\n      };\n    case GET_MARKET_PENDING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case GET_MARKET_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      }\n    default:\n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}